{"version":3,"file":"../../../js/search/local-search.js","names":["window","addEventListener","loadFlag","dataObj","$searchMask","document","getElementById","openSearch","bodyStyle","body","style","width","overflow","anzhiyu","animateIn","querySelector","setTimeout","focus","search","f","event","code","closeSearch","removeEventListener","animateOut","searchClickFn","fetchData","async","data","response","fetch","path","test","json","res","text","t","DOMParser","parseFromString","querySelectorAll","map","item","title","textContent","content","url","cover","ok","$loadDataItem","nextElementSibling","display","remove","GLOBAL_CONFIG","localSearch","preload","$input","$resultContent","$loadingStatus","keywords","this","value","trim","toLowerCase","split","innerHTML","str","length","count","then","forEach","isMatch","dataTitle","dataContent","dataUrl","startsWith","root","keyword","indexOf","languages","hits_empty","replace","pjax","refresh","isHidden"],"sources":["js/search/local-search.js"],"mappings":"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","ignoreList":[],"sourcesContent":["window.addEventListener(\"load\", () => {\n  let loadFlag = false;\n  let dataObj = [];\n  const $searchMask = document.getElementById(\"search-mask\");\n\n  const openSearch = () => {\n    const bodyStyle = document.body.style;\n    bodyStyle.width = \"100%\";\n    bodyStyle.overflow = \"hidden\";\n    anzhiyu.animateIn($searchMask, \"to_show 0.5s\");\n    anzhiyu.animateIn(document.querySelector(\"#local-search .search-dialog\"), \"titleScale 0.5s\");\n    setTimeout(() => {\n      document.querySelector(\"#local-search-input input\").focus();\n    }, 100);\n    if (!loadFlag) {\n      search();\n      loadFlag = true;\n    }\n    // shortcut: ESC\n    document.addEventListener(\"keydown\", function f(event) {\n      if (event.code === \"Escape\") {\n        closeSearch();\n        document.removeEventListener(\"keydown\", f);\n      }\n    });\n  };\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style;\n    bodyStyle.width = \"\";\n    bodyStyle.overflow = \"\";\n    anzhiyu.animateOut(document.querySelector(\"#local-search .search-dialog\"), \"search_close .5s\");\n    anzhiyu.animateOut($searchMask, \"to_hide 0.5s\");\n  };\n\n  const searchClickFn = () => {\n    document.querySelector(\"#search-button > .search\").addEventListener(\"click\", openSearch);\n    document.querySelector(\"#menu-search\").addEventListener(\"click\", openSearch);\n  };\n\n  const searchClickFnOnce = () => {\n    document.querySelector(\"#local-search .search-close-button\").addEventListener(\"click\", closeSearch);\n    $searchMask.addEventListener(\"click\", closeSearch);\n    if (GLOBAL_CONFIG.localSearch.preload) dataObj = fetchData(GLOBAL_CONFIG.localSearch.path);\n  };\n\n  // check url is json or not\n  const isJson = url => {\n    const reg = /\\.json$/;\n    return reg.test(url);\n  };\n\n  const fetchData = async path => {\n    let data = [];\n    const response = await fetch(path);\n    if (isJson(path)) {\n      data = await response.json();\n    } else {\n      const res = await response.text();\n      const t = await new window.DOMParser().parseFromString(res, \"text/xml\");\n      const a = await t;\n\n      data = [...a.querySelectorAll(\"entry\")].map(item => {\n        return {\n          title: item.querySelector(\"title\").textContent,\n          content: item.querySelector(\"content\").textContent,\n          url: item.querySelector(\"url\").textContent,\n          cover: item.querySelector(\"cover\") ? item.querySelector(\"cover\").textContent : \"\"\n        };\n      });\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById(\"loading-database\");\n      $loadDataItem.nextElementSibling.style.display = \"block\";\n      $loadDataItem.remove();\n    }\n    return data;\n  };\n\n  const search = () => {\n    if (!GLOBAL_CONFIG.localSearch.preload) {\n      dataObj = fetchData(GLOBAL_CONFIG.localSearch.path);\n    }\n    const $input = document.querySelector(\"#local-search-input input\");\n    const $resultContent = document.getElementById(\"local-search-results\");\n    const $loadingStatus = document.getElementById(\"loading-status\");\n\n    $input.addEventListener(\"input\", function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/);\n      if (keywords[0] !== \"\")\n        $loadingStatus.innerHTML = '<i class=\"anzhiyufont anzhiyu-icon-spinner anzhiyu-pulse-icon\"></i>';\n\n      $resultContent.innerHTML = \"\";\n      let str = '<div class=\"search-result-list\">';\n      if (keywords.length <= 0) return;\n      let count = 0;\n      \n      // perform local searching\n      dataObj.then(data => {\n        data.forEach(data => {\n          let isMatch = true;\n          let dataTitle = data.title ? data.title.trim().toLowerCase() : \"\";\n          let dataContent = data.content ? data.content.trim().toLowerCase() : \"\";\n          let dataUrl = data.url.startsWith(\"/\") ? data.url : GLOBAL_CONFIG.root + data.url;\n          \n          // 搜索标题和内容\n          if (dataTitle !== \"\" || dataContent !== \"\") {\n            keywords.forEach((keyword) => {\n              if (dataTitle.indexOf(keyword) < 0 && dataContent.indexOf(keyword) < 0) {\n                isMatch = false;\n              }\n            });\n          } else {\n            isMatch = false;\n          }\n\n          // 只显示标题\n          if (isMatch) {\n            str += '<div class=\"local-search__hit-item\">';\n            str += '<div class=\"search-result-title\"><a href=\"' + dataUrl + '\">' + data.title + '</a></div>';\n            str += \"</div>\";\n            count += 1;\n          }\n        });\n        \n        if (count === 0) {\n          str +=\n            '<div id=\"local-search__hits-empty\">' +\n            GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n            \"</div>\";\n        }\n        str += \"</div>\";\n        $resultContent.innerHTML = str;\n        if (keywords[0] !== \"\") $loadingStatus.innerHTML = \"\";\n        window.pjax && window.pjax.refresh($resultContent);\n      });\n    });\n  };\n\n  searchClickFn();\n  searchClickFnOnce();\n\n  // pjax\n  window.addEventListener(\"pjax:complete\", () => {\n    !anzhiyu.isHidden($searchMask) && closeSearch();\n    searchClickFn();\n  });\n});"]}