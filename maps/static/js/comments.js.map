{"version":3,"file":"../../../static/js/comments.js","names":["LatestComments","API_URL","ADMIN_EMAIL_MD5","PAGE_SIZE","LOADING_GIF","fetchComments","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","this","method","headers","body","JSON","stringify","event","includeReply","pageSize","signal","data","json","error","console","clearTimeout","formatTimeAgo","timestamp","diff","Math","floor","Date","now","toLocaleDateString","month","day","formatContent","content","replace","m","quot","nbsp","slice","trim","generateCommentHTML","comment","created","url","avatar","nick","mailMd5","id","timeAgo","formattedContent","getErrorTemplate","icon","message","insertComponent","container","document","getElementById","innerHTML","comments","length","map","bind","join","style","opacity","requestAnimationFrame","transition","forEach","addEventListener"],"sources":["static/js/comments.js"],"mappings":"AAAA,MACI,MAAMA,EAAiB,CACrBC,QAAS,0BACTC,gBAAiB,mEACjBC,UAAW,EACXC,YAAa,mDAEb,mBAAMC,GACJ,MAAMC,EAAa,IAAIC,gBACjBC,EAAYC,YAAW,IAAMH,EAAWI,SAAS,KAEvD,IACE,MAAMC,QAAiBC,MAAMC,KAAKZ,QAAS,CACzCa,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,sBACPC,cAAc,EACdC,SAAUR,KAAKV,YAEjBmB,OAAQhB,EAAWgB,UAGfC,KAAEA,SAAeZ,EAASa,OAChC,OAAOD,CACT,CAAE,MAAOE,GAEP,OADAC,QAAQD,MAAM,UAAWA,GAClB,IACT,CAAE,QACAE,aAAanB,EACf,CACF,EAEA,aAAAoB,CAAcC,GACZ,MAAMC,EAAOC,KAAKC,OAAOC,KAAKC,MAAQ,IAAID,KAAKJ,IAAc,KAC7D,OAAIC,EAAO,GAAW,KAClBA,EAAO,KAAa,GAAGC,KAAKC,MAAMF,EAAO,SACzCA,EAAO,MAAc,GAAGC,KAAKC,MAAMF,EAAO,WAC1CA,EAAO,OAAe,GAAGC,KAAKC,MAAMF,EAAO,WAExC,IAAIG,KAAKJ,GAAWM,mBAAmB,QAAS,CAAEC,MAAO,UAAWC,IAAK,YAAe,GACjG,EAEAC,cAAcC,GACPA,EAEEA,EACJC,QAAQ,sCAAuC,SAC/CA,QAAQ,4BAA6B,QACrCA,QAAQ,6BAA8B,MACtCA,QAAQ,cAAe,QACvBA,QAAQ,0BAA2B,QACnCA,QAAQ,WAAY,IACpBA,QAAQ,gCAAgCC,IACvC,CAAE,IAAI,IAAK,IAAI,IAAK,IAAI,IAAKC,KAAO,IAAK,MAAM,IAAKC,KAAO,KAAMF,EAAEG,MAAM,GAAG,OAC7EJ,QAAQ,OAAQ,KAChBK,OAZkB,GAevB,mBAAAC,CAAoBC,GAClB,MAAMC,QAAEA,EAASD,QAASR,EAAOU,IAAEA,EAAGC,OAAEA,EAAMC,KAAEA,EAAIC,QAAEA,EAAOC,GAAEA,GAAON,EAChEO,EAAUzC,KAAKe,cAAcoB,GAC7BO,EAAmB1C,KAAKyB,cAAcC,GAI5C,MAAO,mDACiCgB,6BAA4CN,KAAOI,iGAE/CH,2IAIlCC,KAVSC,IAAYvC,KAAKX,gBAAkB,wmBACyiB,qDAUvjBoD,iFAEAC,yDAI1C,EAEAC,iBAAgB,CAACC,EAAMC,IACd,gMAEgBD,qCAAiD,uBAATA,EAAgC,UAAY,qFACnEC,oCAK1C,qBAAMC,GACJ,MAAMC,EAAYC,SAASC,eAAe,mBAC1C,IAAKF,EAAW,OAEhBA,EAAUG,UAAY,aAAalD,KAAKT,2EAExC,MAAM4D,QAAiBnD,KAAKR,gBAC5B,IAAIkC,EAGFA,EADe,OAAbyB,EACQnD,KAAK2C,iBAAiB,qBAAsB,gBACzB,IAApBQ,EAASC,OACRpD,KAAK2C,iBAAiB,gBAAiB,mBAEvCQ,EAASE,IAAIrD,KAAKiC,oBAAoBqB,KAAKtD,OAAOuD,KAAK,IAGnER,EAAUS,MAAMC,QAAU,IAC1BV,EAAUG,UAAYxB,EAEtBgC,uBAAsB,KACpBX,EAAUS,MAAMG,WAAa,uBAC7BZ,EAAUS,MAAMC,QAAU,GAAG,GAEjC,GAIF,CAAC,mBAAoB,gBAAgBG,SAAQtD,GAC3C0C,SAASa,iBAAiBvD,GAAO,IAAMnB,EAAe2D,qBAEzD,EA1HH","ignoreList":[],"sourcesContent":["(() => {\n    const LatestComments = {\n      API_URL: 'https://twikoo.ruom.top',\n      ADMIN_EMAIL_MD5: 'f2c9c64c90a00afeed5ba410e5447a0d01aa294874bd662032a27c5385bcde1c',\n      PAGE_SIZE: 5,\n      LOADING_GIF: 'https://lib.bsgun.cn/Hexo-static/img/loading.gif',\n  \n      async fetchComments() {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 5000);\n  \n        try {\n          const response = await fetch(this.API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              event: 'GET_RECENT_COMMENTS',\n              includeReply: true,\n              pageSize: this.PAGE_SIZE\n            }),\n            signal: controller.signal\n          });\n  \n          const { data } = await response.json();\n          return data;\n        } catch (error) {\n          console.error('获取评论出错:', error);\n          return null;\n        } finally {\n          clearTimeout(timeoutId);\n        }\n      },\n  \n      formatTimeAgo(timestamp) {\n        const diff = Math.floor((Date.now() - new Date(timestamp)) / 1000);\n        if (diff < 60) return '刚刚';\n        if (diff < 3600) return `${Math.floor(diff / 60)}分钟前`;\n        if (diff < 86400) return `${Math.floor(diff / 3600)}小时前`;\n        if (diff < 604800) return `${Math.floor(diff / 86400)}天前`;\n  \n        return new Date(timestamp).toLocaleDateString('zh-CN', { month: 'numeric', day: 'numeric' }) + '日';\n      },\n  \n      formatContent(content) {\n        if (!content) return '';\n        \n        return content\n          .replace(/<pre><code>[\\s\\S]*?<\\/code><\\/pre>/g, '[代码块]')\n          .replace(/<code>([^<]{4,})<\\/code>/g, '[代码]')\n          .replace(/<code>([^<]{1,3})<\\/code>/g, '$1')\n          .replace(/<img[^>]*>/g, '[图片]')\n          .replace(/<a[^>]*?>[\\s\\S]*?<\\/a>/g, '[链接]')\n          .replace(/<[^>]+>/g, '')\n          .replace(/&(gt|lt|amp|quot|#39|nbsp);/g, m => \n            ({'>':'>', '<':'<', '&':'&', 'quot':'\"', '#39':\"'\", 'nbsp':' '})[m.slice(1,-1)])\n          .replace(/\\s+/g, ' ')\n          .trim();\n      },\n  \n      generateCommentHTML(comment) {\n        const { created, comment: content, url, avatar, nick, mailMd5, id } = comment;\n        const timeAgo = this.formatTimeAgo(created);\n        const formattedContent = this.formatContent(content);\n        const adminBadge = mailMd5 === this.ADMIN_EMAIL_MD5 ? `\n          <svg t=\"1731283534336\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"29337\" width=\"22\" height=\"22\"><path d=\"M512 0C230.4 0 0 230.4 0 512s230.4 512 512 512 512-230.4 512-512S793.6 0 512 0z m291.84 366.08c-46.08 0-79.36 23.04-92.16 66.56l-163.84 358.4h-66.56L312.32 435.2c-17.92-46.08-46.08-71.68-89.6-71.68v-35.84H512v35.84h-40.96c-25.6 2.56-30.72 23.04-12.8 61.44l102.4 225.28 89.6-199.68c25.6-56.32 2.56-84.48-71.68-89.6v-35.84h225.28v40.96z\" fill=\"#06c013\" p-id=\"29338\" data-spm-anchor-id=\"a313x.search_index.0.i73.2b2d3a81BgxnVW\" class=\"\"></path></svg>` : '';\n  \n        return `\n          <div class=\"aside-list-item\" title=\"${formattedContent}\" onclick=\"pjax.loadUrl('${url}#${id}')\">\n            <div class=\"thumbnail\">\n              <img class=\"aside-list-avatar\" src=\"${avatar}\" alt=\"avatar\">\n            </div>\n            <div class=\"content\">\n              <div class=\"aside-list-author\">\n                ${nick} ${adminBadge}\n                <span class=\"aside-list-date\">${timeAgo}</span>\n              </div>\n              <div class=\"aside-list-content\">${formattedContent}</div>\n            </div>\n          </div>\n        `;\n      },\n  \n      getErrorTemplate(icon, message) {\n        return `\n          <div style=\"min-height: 346px;display: flex;padding: 20px;text-align: center;justify-content: center;align-items: center;flex-direction: column;\">\n            <i class=\"fas fa-${icon}\" style=\"font-size: 2rem; color: ${icon === 'exclamation-circle' ? '#ff6b6b' : '#999'}; margin-bottom: 10px;\"></i>\n            <p style=\"color: #666;margin: 0;\">${message}</p>\n          </div>\n        `;\n      },\n  \n      async insertComponent() {\n        const container = document.getElementById(\"latest-comments\");\n        if (!container) return;\n  \n        container.innerHTML = `<img src=\"${this.LOADING_GIF}\" style=\"display: flex;min-height: 346px;object-fit: cover;\">`;\n  \n        const comments = await this.fetchComments();\n        let content;\n  \n        if (comments === null) {\n          content = this.getErrorTemplate('exclamation-circle', '评论加载失败，请稍后再试');\n        } else if (comments.length === 0) {\n          content = this.getErrorTemplate('comment-slash', '还没有评论呢~ 快来抢沙发吧！');\n        } else {\n          content = comments.map(this.generateCommentHTML.bind(this)).join('');\n        }\n  \n        container.style.opacity = '0';\n        container.innerHTML = content;\n  \n        requestAnimationFrame(() => {\n          container.style.transition = 'opacity 0.3s ease-in';\n          container.style.opacity = '1';\n        });\n      }\n    };\n  \n    // 初始化\n    ['DOMContentLoaded', 'pjax:success'].forEach(event => \n      document.addEventListener(event, () => LatestComments.insertComponent())\n    );\n  })();"]}