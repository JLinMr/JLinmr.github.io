{"version":3,"file":"../../../static/js/countdown.js","names":["CountdownTimer","config","day","text","unit","week","month","year","calculators","hours","Date","getHours","remaining","percentage","getDay","passed","now","total","getFullYear","getMonth","getDate","start","Math","floor","updateCountdown","elements","map","id","document","getElementById","some","el","eventName","eventDate","daysUntil","countRight","target","textContent","round","setHours","innerHTML","Object","entries","key","toFixed","join","timer","setInterval","forEach","event","addEventListener","clearInterval","stop"],"sources":["static/js/countdown.js"],"mappings":"AAAA,MAAMA,eAAiB,MACnB,MAAMC,EACU,aADVA,EAEU,KAFVA,EAGK,CACHC,IAAK,CAAEC,KAAM,KAAMC,KAAM,MACzBC,KAAM,CAAEF,KAAM,KAAMC,KAAM,KAC1BE,MAAO,CAAEH,KAAM,KAAMC,KAAM,KAC3BG,KAAM,CAAEJ,KAAM,KAAMC,KAAM,MAI5BI,EAAc,CAChBN,IAAK,KACD,MAAMO,GAAQ,IAAIC,MAAOC,WACzB,MAAO,CACHC,UAAW,GAAKH,EAChBI,WAAaJ,EAAQ,GAAM,IAC9B,EAELJ,KAAM,KACF,MAAMH,GAAM,IAAIQ,MAAOI,SACjBC,EAAiB,IAARb,EAAY,EAAIA,EAAM,EACrC,MAAO,CACHU,UAAW,EAAIG,EACfF,YAAcE,EAAS,GAAK,EAAK,IACpC,EAELT,MAAO,KACH,MAAMU,EAAM,IAAIN,KACVO,EAAQ,IAAIP,KAAKM,EAAIE,cAAeF,EAAIG,WAAa,EAAG,GAAGC,UAC3DL,EAASC,EAAII,UAAY,EAC/B,MAAO,CACHR,UAAWK,EAAQF,EACnBF,WAAaE,EAASE,EAAS,IAClC,EAELV,KAAM,KACF,MAAMS,EAAM,IAAIN,KACVW,EAAQ,IAAIX,KAAKM,EAAIE,cAAe,EAAG,GACvCD,EAAQ,KAAOD,EAAIE,cAAgB,GAAM,EAAI,EAAI,GACjDH,EAASO,KAAKC,OAAOP,EAAMK,GAAS,OAC1C,MAAO,CACHT,UAAWK,EAAQF,EACnBF,WAAaE,EAASE,EAAS,IAClC,GAIT,SAASO,IACL,MAAMC,EAAW,CAAC,YAAa,YAAa,YAAa,cACpDC,KAAIC,GAAMC,SAASC,eAAeF,KAEvC,GAAIF,EAASK,MAAKC,IAAOA,IAAK,OAE9B,MAAOC,EAAWC,EAAWC,EAAWC,GAAcV,EAChDT,EAAM,IAAIN,KACV0B,EAAS,IAAI1B,KAAKT,GAExB+B,EAAUK,YAAcpC,EACxBgC,EAAUI,YAAcpC,EACxBiC,EAAUG,YAAcf,KAAKgB,OAAOF,EAASpB,EAAIuB,SAAS,EAAE,EAAE,EAAE,IAAM,OAEtEJ,EAAWK,UAAYC,OAAOC,QAAQzC,GACjCyB,KAAI,EAAEiB,GAAMxC,OAAMC,YACf,MAAMQ,UAACA,EAASC,WAAEA,GAAcL,EAAYmC,KAC5C,MAAO,wGAE6BxC,2IAEqBU,gBAAyBA,EAAW,uEACpDA,GAAc,GAAK,UAAY,OAAOA,EAAW+B,QAAQ,qEAC1D/B,GAAc,GAAK,UAAY,uEACvBD,yBAAiCR,6HAIhF,IACFyC,KAAK,GAChB,CAEA,IAAIC,EACJ,MAAMzB,EAAQ,KACVG,IACAsB,EAAQC,YAAYvB,EAAiB,IAAO,EAQhD,MALA,CAAC,gBAAiB,oBAAoBwB,SAAQC,GAC1CrB,SAASsB,iBAAiBD,EAAO5B,KAErCO,SAASsB,iBAAiB,aAAa,IAAMJ,GAASK,cAAcL,KAE7D,CAAEzB,QAAO+B,KAAM,IAAMN,GAASK,cAAcL,GACtD,EA7FsB","ignoreList":[],"sourcesContent":["const CountdownTimer = (() => {\n    const config = {\n        targetDate: \"2025-01-29\",\n        targetName: \"春节\",\n        units: {\n            day: { text: \"今日\", unit: \"小时\" },\n            week: { text: \"本周\", unit: \"天\" },\n            month: { text: \"本月\", unit: \"天\" },\n            year: { text: \"本年\", unit: \"天\" }\n        }\n    };\n\n    const calculators = {\n        day: () => {\n            const hours = new Date().getHours();\n            return {\n                remaining: 24 - hours,\n                percentage: (hours / 24) * 100\n            };\n        },\n        week: () => {\n            const day = new Date().getDay();\n            const passed = day === 0 ? 6 : day - 1;\n            return {\n                remaining: 6 - passed,\n                percentage: ((passed + 1) / 7) * 100\n            };\n        },\n        month: () => {\n            const now = new Date();\n            const total = new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();\n            const passed = now.getDate() - 1;\n            return {\n                remaining: total - passed,\n                percentage: (passed / total) * 100\n            };\n        },\n        year: () => {\n            const now = new Date();\n            const start = new Date(now.getFullYear(), 0, 1);\n            const total = 365 + (now.getFullYear() % 4 === 0 ? 1 : 0);\n            const passed = Math.floor((now - start) / 86400000);\n            return {\n                remaining: total - passed,\n                percentage: (passed / total) * 100\n            };\n        }\n    };\n\n    function updateCountdown() {\n        const elements = ['eventName', 'eventDate', 'daysUntil', 'countRight']\n            .map(id => document.getElementById(id));\n        \n        if (elements.some(el => !el)) return;\n        \n        const [eventName, eventDate, daysUntil, countRight] = elements;\n        const now = new Date();\n        const target = new Date(config.targetDate);\n        \n        eventName.textContent = config.targetName;\n        eventDate.textContent = config.targetDate;\n        daysUntil.textContent = Math.round((target - now.setHours(0,0,0,0)) / 86400000);\n        \n        countRight.innerHTML = Object.entries(config.units)\n            .map(([key, {text, unit}]) => {\n                const {remaining, percentage} = calculators[key]();\n                return `\n                    <div class=\"cd-count-item\">\n                        <div class=\"cd-item-name\">${text}</div>\n                        <div class=\"cd-item-progress\">\n                            <div class=\"cd-progress-bar\" style=\"width: ${percentage}%; opacity: ${percentage/100}\"></div>\n                            <span class=\"cd-percentage ${percentage >= 46 ? 'cd-many' : ''}\">${percentage.toFixed(2)}%</span>\n                            <span class=\"cd-remaining ${percentage >= 60 ? 'cd-many' : ''}\">\n                                <span class=\"cd-tip\">还剩</span>${remaining}<span class=\"cd-tip\">${unit}</span>\n                            </span>\n                        </div>\n                    </div>\n                `;\n            }).join('');\n    }\n\n    let timer;\n    const start = () => {\n        updateCountdown();\n        timer = setInterval(updateCountdown, 600000);\n    };\n    \n    ['pjax:complete', 'DOMContentLoaded'].forEach(event => \n        document.addEventListener(event, start)\n    );\n    document.addEventListener('pjax:send', () => timer && clearInterval(timer));\n    \n    return { start, stop: () => timer && clearInterval(timer) };\n})();"]}