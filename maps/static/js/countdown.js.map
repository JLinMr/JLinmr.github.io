{"version":3,"file":"../../../static/js/countdown.js","names":["CountdownTimer","config","targetDate","targetName","units","day","text","divider","unit","week","month","year","getTimeUnit","now","Date","start","setHours","end","currentHour","getHours","remaining","percentage","name","toFixed","ranges","currentDay","getDay","mondayOffset","setDate","getDate","setMonth","getMonth","total","Math","floor","passed","updateCountdown","elements","map","id","document","getElementById","some","el","eventName","eventDate","daysUntil","countRight","timeData","Object","keys","reduce","acc","daysRemaining","round","textContent","innerHTML","entries","_","item","join","timer","setInterval","forEach","event","addEventListener","clearInterval","stop"],"sources":["static/js/countdown.js"],"mappings":"AAAA,MAAMA,eAAiB,MACnB,MAAMC,EAAS,CACXC,WAAY,aACZC,WAAY,KACZC,MAAO,CACHC,IAAK,CAAEC,KAAM,KAAMC,QAAS,EAAGC,KAAM,MACrCC,KAAM,CAAEH,KAAM,KAAMC,QAAS,GAAIC,KAAM,KACvCE,MAAO,CAAEJ,KAAM,KAAMC,QAAS,GAAIC,KAAM,KACxCG,KAAM,CAAEL,KAAM,KAAMC,QAAS,GAAIC,KAAM,OAI/C,SAASI,EAAYJ,GACjB,MAAMK,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAAKD,EAAIG,SAAS,EAAG,EAAG,EAAG,IACvCC,EAAM,IAAIH,KAAKD,EAAIG,SAAS,GAAI,GAAI,GAAI,MAE9C,GAAa,QAATR,EAAgB,CAChB,MAAMU,GAAc,IAAIJ,MAAOK,WACzBC,EAAY,GAAKF,EACjBG,EAAcH,EAAc,GAAM,IAExC,MAAO,CACHI,KAAMrB,EAAOG,MAAMI,GAAMF,KACzBc,UAAWA,EACXC,WAAYA,EAAWE,QAAQ,GAC/Bf,KAAMP,EAAOG,MAAMI,GAAMA,KAEjC,CAEA,MAAMgB,EAAS,CACXf,KAAM,KACF,MAAMgB,EAAaV,EAAMW,SACnBC,EAA8B,IAAfF,GAAoB,EAAI,EAAIA,EACjDV,EAAMa,QAAQb,EAAMc,UAAYF,GAChCV,EAAIW,QAAQb,EAAMc,UAAY,EAAE,EAEpCnB,MAAO,KACHK,EAAMa,QAAQ,GACdX,EAAIa,SAASb,EAAIc,WAAa,EAAG,EAAE,EAEvCpB,KAAM,KACFI,EAAMe,SAAS,EAAG,GAClBb,EAAIa,SAAS,GAAI,GAAG,GAG5BN,EAAOhB,OAEP,MAAMwB,EAAiB,QAATxB,EAAiB,GAAKyB,KAAKC,OAAOjB,EAAMF,GAAS,OAAY,EACrEoB,EAASF,KAAKC,OAAOrB,EAAME,IAAU,KAAUd,EAAOG,MAAMI,GAAMD,UAClEc,EAAcc,EAASH,EAAS,IAEtC,MAAO,CACHV,KAAMrB,EAAOG,MAAMI,GAAMF,KACzBc,UAAWY,EAAQG,EACnBd,WAAYA,EAAWE,QAAQ,GAC/Bf,KAAMP,EAAOG,MAAMI,GAAMA,KAEjC,CAEA,SAAS4B,IACL,MAAMC,EAAW,CAAC,YAAa,YAAa,YAAa,cACpDC,KAAIC,GAAMC,SAASC,eAAeF,KAEvC,GAAIF,EAASK,MAAKC,IAAOA,IAAK,OAE9B,MAAOC,EAAWC,EAAWC,EAAWC,GAAcV,EAChDW,EAAWC,OAAOC,KAAKjD,EAAOG,OAAO+C,QAAO,CAACC,EAAK5C,KAAS,IAAK4C,EAAK5C,CAACA,GAAOI,EAAYJ,MAAS,CAAC,GACnG6C,EAAgBpB,KAAKqB,OAAO,IAAIxC,KAAKb,EAAOC,aAAc,IAAIY,MAAOE,SAAS,EAAE,EAAE,EAAE,IAAM,OAEhG4B,EAAUW,YAActD,EAAOE,WAC/B0C,EAAUU,YAActD,EAAOC,WAC/B4C,EAAUS,YAAcF,EACxBN,EAAWS,UAAYP,OAAOQ,QAAQT,GACjCV,KAAI,EAAEoB,EAAGC,KAAU,gGAEgBA,EAAKrC,sIAEgBqC,EAAKtC,yBAAyBsC,EAAKtC,WAAW,mEAC9DsC,EAAKtC,YAAc,GAAK,UAAY,OAAOsC,EAAKtC,yEACjDsC,EAAKtC,YAAc,GAAK,UAAY,mEAC5BsC,EAAKvC,iCAAiCuC,EAAKnD,mHAIxFoD,KAAK,GAChB,CAEA,IAAIC,EACJ,MAAM9C,EAAQ,KACVqB,IACAyB,EAAQC,YAAY1B,EAAiB,IAAO,EAMhD,MAHA,CAAC,gBAAiB,oBAAoB2B,SAAQC,GAASxB,SAASyB,iBAAiBD,EAAOjD,KACxFyB,SAASyB,iBAAiB,aAAa,IAAMJ,GAASK,cAAcL,KAE7D,CAAE9C,QAAOoD,KAAM,IAAMN,GAASK,cAAcL,GACtD,EAlGsB","ignoreList":[],"sourcesContent":["const CountdownTimer = (() => {\n    const config = {\n        targetDate: \"2025-01-29\",\n        targetName: \"春节\",\n        units: {\n            day: { text: \"今日\", divider: 1, unit: \"小时\" },\n            week: { text: \"本周\", divider: 24, unit: \"天\" },\n            month: { text: \"本月\", divider: 24, unit: \"天\" },\n            year: { text: \"本年\", divider: 24, unit: \"天\" }\n        }\n    };\n\n    function getTimeUnit(unit) {\n        const now = new Date();\n        const start = new Date(now.setHours(0, 0, 0, 0));\n        const end = new Date(now.setHours(23, 59, 59, 999));\n        \n        if (unit === 'day') {\n            const currentHour = new Date().getHours();\n            const remaining = 24 - currentHour;\n            const percentage = (currentHour / 24) * 100;\n            \n            return {\n                name: config.units[unit].text,\n                remaining: remaining,\n                percentage: percentage.toFixed(2),\n                unit: config.units[unit].unit\n            };\n        }\n\n        const ranges = {\n            week: () => {\n                const currentDay = start.getDay();\n                const mondayOffset = currentDay === 0 ? -6 : 1 - currentDay;\n                start.setDate(start.getDate() + mondayOffset);\n                end.setDate(start.getDate() + 6);\n            },\n            month: () => {\n                start.setDate(1);\n                end.setMonth(end.getMonth() + 1, 0);\n            },\n            year: () => {\n                start.setMonth(0, 1);\n                end.setMonth(11, 31);\n            }\n        };\n        ranges[unit]?.();\n\n        const total = unit === \"day\" ? 24 : Math.floor((end - start) / 86400000) + 1;\n        const passed = Math.floor((now - start) / (3600000 * config.units[unit].divider));\n        const percentage = (passed / total) * 100;\n\n        return {\n            name: config.units[unit].text,\n            remaining: total - passed,\n            percentage: percentage.toFixed(2),\n            unit: config.units[unit].unit\n        };\n    }\n\n    function updateCountdown() {\n        const elements = ['eventName', 'eventDate', 'daysUntil', 'countRight']\n            .map(id => document.getElementById(id));\n        \n        if (elements.some(el => !el)) return;\n        \n        const [eventName, eventDate, daysUntil, countRight] = elements;\n        const timeData = Object.keys(config.units).reduce((acc, unit) => ({...acc, [unit]: getTimeUnit(unit)}), {});\n        const daysRemaining = Math.round((new Date(config.targetDate) - new Date().setHours(0,0,0,0)) / 86400000);\n\n        eventName.textContent = config.targetName;\n        eventDate.textContent = config.targetDate;\n        daysUntil.textContent = daysRemaining;\n        countRight.innerHTML = Object.entries(timeData)\n            .map(([_, item]) => `\n                <div class=\"cd-count-item\">\n                    <div class=\"cd-item-name\">${item.name}</div>\n                    <div class=\"cd-item-progress\">\n                        <div class=\"cd-progress-bar\" style=\"width: ${item.percentage}%; opacity: ${item.percentage/100}\"></div>\n                        <span class=\"cd-percentage ${item.percentage >= 46 ? 'cd-many' : ''}\">${item.percentage}%</span>\n                        <span class=\"cd-remaining ${item.percentage >= 60 ? 'cd-many' : ''}\">\n                            <span class=\"cd-tip\">还剩</span>${item.remaining}<span class=\"cd-tip\">${item.unit}</span>\n                        </span>\n                    </div>\n                </div>\n            `).join('');\n    }\n\n    let timer;\n    const start = () => {\n        updateCountdown();\n        timer = setInterval(updateCountdown, 600000);\n    };\n    \n    ['pjax:complete', 'DOMContentLoaded'].forEach(event => document.addEventListener(event, start));\n    document.addEventListener('pjax:send', () => timer && clearInterval(timer));\n    \n    return { start, stop: () => timer && clearInterval(timer) };\n})();"]}